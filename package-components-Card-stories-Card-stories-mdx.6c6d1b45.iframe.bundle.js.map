{"version":3,"file":"package-components-Card-stories-Card-stories-mdx.6c6d1b45.iframe.bundle.js","mappings":";;;;;;AA2BA;;AAEA;;;AAGA;;;;;AAKA;AACA;;;;;;;AAOA;;ACzCA","sources":["webpack://hazel-ui/./src/package/components/Card/Card.tsx","webpack://hazel-ui/./src/package/foundation/Box/Box.tsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { styled } from \"styled-components\";\nimport { compose, flexbox, layout, space, typography, } from \"styled-system\";\nimport { Color } from \"../../foundation/Color/Color.js\";\nimport { Shadow } from \"../../foundation/Shadow/Shadow.js\";\nconst styledSystemStyles = compose(flexbox, layout, space, typography);\nexport function Card(_a) {\n    var { children } = _a, rest = __rest(_a, [\"children\"]);\n    return (_jsx(StyledDiv, Object.assign({ as: \"div\" }, rest, { children: children })));\n}\nconst StyledDiv = styled.div `\n  float: left;\n\n  margin: 1rem;\n  padding: 1rem;\n\n  border: 1px solid ${Color.gray6};\n  border-radius: 5px;\n  box-shadow: ${Shadow.s};\n\n  &:hover {\n    box-shadow: ${Shadow.m};\n    transform: translate3d(0, -3px, 0);\n  }\n\n  &:active {\n    border-color: ${Color.gray9};\n    box-shadow: ${Shadow.s};\n    transform: translate3d(0, 0, 0);\n  }\n\n  transition: background 150ms ease-out, border 150ms ease-out,\n    transform 150ms ease-out;\n\n  ${styledSystemStyles}\n`;\n","import { styled } from \"styled-components\";\nimport { compose, flexbox, layout, space, typography, } from \"styled-system\";\nconst styledSystemStyles = compose(flexbox, layout, space, typography);\nexport const Box = styled.div `\n  ${styledSystemStyles}\n`;\n"],"names":[],"sourceRoot":""}