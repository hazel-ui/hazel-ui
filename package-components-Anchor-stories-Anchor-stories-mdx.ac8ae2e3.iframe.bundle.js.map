{"version":3,"file":"package-components-Anchor-stories-Anchor-stories-mdx.ac8ae2e3.iframe.bundle.js","mappings":";AAUA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AAIA;;AAEA;AACA;;;AAGA;AACA;;;AAGA;AACA;;AAGA;AAtBA;AChEA;AAIA;ACNA;;;AAGA;;;AAGA","sources":["webpack://hazel-ui/./src/package/foundation/Typography/styles.ts","webpack://hazel-ui/./src/package/foundation/Typography/Typography.tsx","webpack://hazel-ui/./src/package/components/Anchor/Anchor.tsx"],"sourcesContent":["import { latin } from \"@bbc/gel-foundations/scripts\";\nimport { getBodyCopy, getBrevier, getCanon, getDoublePica, getFoolscap, getGreatPrimer, getLongPrimer, getParagon, getPica, getTrafalgar, } from \"@bbc/gel-foundations/typography\";\nimport { css } from \"styled-components\";\nimport { MediaQuery } from \"../MediaQuery/MediaQuery.js\";\nimport { Theme } from \"../Theme/Theme.js\";\nimport { letterSpacing } from \"./responsive/letterSpacing.js\";\nexport function applyTypographyVariant(variant) {\n    switch (variant) {\n        case \"display\":\n            return css `\n        font-family: ${Theme.font.serif};\n        font-weight: ${Theme.fontWeight.regular};\n        ${getFoolscap(latin)};\n      `;\n        case \"h1\":\n            return css `\n        font-family: ${Theme.font.serif};\n        font-weight: ${Theme.fontWeight.regular};\n        ${getCanon(latin)};\n      `;\n        case \"h2\":\n            return css `\n        font-family: ${Theme.font.serif};\n        font-weight: ${Theme.fontWeight.regular};\n        ${getTrafalgar(latin)};\n      `;\n        case \"h3\":\n            return css `\n        font-family: ${Theme.font.serif};\n        font-weight: ${Theme.fontWeight.regular};\n        ${getParagon(latin)};\n      `;\n        case \"h4\":\n            return css `\n        font-family: ${Theme.font.serif};\n        font-weight: ${Theme.fontWeight.regular};\n        ${getDoublePica(latin)};\n      `;\n        case \"h5\":\n            return css `\n        font-family: ${Theme.font.serif};\n        font-weight: ${Theme.fontWeight.regular};\n        ${getGreatPrimer(latin)};\n      `;\n        case \"h6\":\n            return css `\n        font-family: ${Theme.font.serif};\n        font-weight: ${Theme.fontWeight.regular};\n        ${getPica(latin)};\n      `;\n        case \"p\":\n            return css `\n        font-family: ${Theme.font.sansSerif};\n        font-weight: ${Theme.fontWeight.regular};\n        ${getBodyCopy(latin)};\n      `;\n        case \"caption\":\n            return css `\n        font-family: ${Theme.font.sansSerif};\n        font-weight: ${Theme.fontWeight.regular};\n        ${getLongPrimer(latin)};\n      `;\n        case \"label\":\n            return css `\n        font-family: ${Theme.font.sansSerif};\n        font-weight: ${Theme.fontWeight.regular};\n        ${getBrevier(latin)};\n        /* ${applyTypographyMediaQueries(\"label\")}; */\n      `;\n        default:\n            return null;\n    }\n}\nfunction applyTypographyMediaQueries(variant) {\n    if (variant === \"none\")\n        return null;\n    return css `\n    letter-spacing: ${letterSpacing[variant].mobileSmall};\n\n    ${MediaQuery.minWidth.mobile} {\n      letter-spacing: ${letterSpacing[variant].mobile};\n    }\n\n    ${MediaQuery.minWidth.tablet} {\n      letter-spacing: ${letterSpacing[variant].tablet};\n    }\n\n    ${MediaQuery.minWidth.desktop} {\n      letter-spacing: ${letterSpacing[variant].desktop};\n    }\n  `;\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { styled } from \"styled-components\";\nimport { applyTypographyVariant } from \"./styles.js\";\nimport { TextTag } from \"./types.js\";\nconst StyledDiv = styled.div `\n  ${(props) => \n// eslint-disable-next-line implicit-arrow-linebreak\nprops.variant && applyTypographyVariant(props.variant)};\n`;\nexport function Typography({ color = \"var(--gray12)\", variant = \"p\", children, sx = {}, }) {\n    return (_jsx(StyledDiv, Object.assign({ variant: variant, as: TextTag[variant], style: Object.assign({ color }, sx) }, { children: children })));\n}\n","import { styled } from \"styled-components\";\nimport { Color } from \"../../foundation/Color/Color.js\";\nexport const Anchor = styled.a `\n  color: ${(props) => props.color || Color.blue9};\n  text-decoration: none;\n\n  ${(props) => props.backgroundColor && `background-color: ${props.backgroundColor};`}\n\n  &:visited {\n    color: ${(props) => props.color || Color.purple9};\n  }\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n"],"names":[],"sourceRoot":""}