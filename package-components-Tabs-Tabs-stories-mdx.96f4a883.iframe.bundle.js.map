{"version":3,"file":"package-components-Tabs-Tabs-stories-mdx.96f4a883.iframe.bundle.js","mappings":";;AASA;;AAwBA;;AAnBA;;;;;AAKA;;;;AAIA;;;AAWA;;ACsGA","sources":["webpack://hazel-ui/./src/package/components/Tabs/Tabs.tsx","webpack://hazel-ui/./src/package/components/Tabs/Tabs.stories.mdx"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { List as RadixList, Panel as RadixPanel, Root as RadixRoot, Tab as RadixTab, } from \"@radix-ui/react-tabs\";\nimport { styled } from \"styled-components\";\nimport { Color } from \"../../foundation/Color/Color.js\";\nfunction Root(props) {\n    return _jsx(RadixRoot, Object.assign({}, props));\n}\nconst List = styled(RadixList) `\n  display: flex;\n  border-bottom: 1px solid ${Color.gray8};\n  width: fit-content;\n`;\nconst Tab = styled(RadixTab) `\n  padding: 10px 20px;\n  color: ${Color.gray9};\n  user-select: none;\n  cursor: pointer;\n\n  &:hover {\n    color: ${Color.gray11};\n  }\n\n  &[data-state=\"active\"] {\n    color: ${Color.gray12};\n    box-shadow: inset 0 -1px 0 0 currentColor, 0 1px 0 0 currentColor;\n  }\n`;\nconst Panel = styled(RadixPanel) `\n  padding: 20px 0 0;\n`;\nexport const Tabs = {\n    Root,\n    List,\n    Tab,\n    Panel,\n};\n","\nimport React from 'react';\n\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport { useState } from \"react\";\nimport { ArgsTable, Meta, Story, Canvas } from \"@storybook/addon-docs\";\nimport { Tabs } from \"./Tabs\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, { ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {})\n  }) : _createMdxContent();\n\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      p: \"p\",\n      a: \"a\",\n      h2: \"h2\",\n      h3: \"h3\",\n      label: \"label\",\n      input: \"input\"\n    }, _provideComponents(), props.components);\n\n    if (!Tabs) _missingMdxReference(\"Tabs\", false);\n    if (!Tabs.List) _missingMdxReference(\"Tabs.List\", true);\n    if (!Tabs.Panel) _missingMdxReference(\"Tabs.Panel\", true);\n    if (!Tabs.Root) _missingMdxReference(\"Tabs.Root\", true);\n    if (!Tabs.Tab) _missingMdxReference(\"Tabs.Tab\", true);\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Meta, {\n        title: \"Atoms/Tabs\",\n        component: Tabs.Root\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h1, {\n        id: \"tabs\",\n        children: \"Tabs\"\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n        children: [\"A set of layered sections of content (called tab panels) that display one\\npanel of content at a time. Built on top of \", /*#__PURE__*/_jsx(_components.a, {\n          href: \"https://radix-ui.com/primitives/docs/components/tabs\",\n          target: \"_blank\",\n          rel: \"nofollow noopener noreferrer\",\n          children: \"@radix-ui/react-tabs\"\n        }), \".\"]\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"Overview\",\n          children: () => /*#__PURE__*/_jsxs(Tabs.Root, {\n            defaultValue: 0,\n            children: [/*#__PURE__*/_jsxs(Tabs.List, {\n              \"aria-label\": \"tabs\",\n              children: [/*#__PURE__*/_jsx(Tabs.Tab, {\n                value: 0,\n                children: \"One\"\n              }), /*#__PURE__*/_jsx(Tabs.Tab, {\n                value: 1,\n                children: \"Two\"\n              }), /*#__PURE__*/_jsx(Tabs.Tab, {\n                value: 2,\n                children: \"Three\"\n              })]\n            }), /*#__PURE__*/_jsx(Tabs.Panel, {\n              value: 0,\n              children: \"Tab one content\"\n            }), /*#__PURE__*/_jsx(Tabs.Panel, {\n              value: 1,\n              children: \"Tab two content\"\n            }), /*#__PURE__*/_jsx(Tabs.Panel, {\n              value: 2,\n              children: \"Tab three content\"\n            })]\n          })\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(ArgsTable, {\n        story: \"Overview\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h2, {\n        id: \"examples\",\n        children: \"Examples\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"controlled\",\n        children: \"Controlled\"\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"Controlled\",\n          children: () => {\n            const [value, setValue] = useState(\"0\");\n            return /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(_components.label, {\n                htmlFor: \"tab\",\n                children: \"Drag slider to change tab:\"\n              }), /*#__PURE__*/_jsx(_components.input, {\n                type: \"range\",\n                name: \"tab\",\n                min: \"0\",\n                max: \"2\",\n                value: value,\n                onChange: event => setValue(event.currentTarget.value)\n              }), /*#__PURE__*/_jsxs(Tabs.Root, {\n                value: value,\n                onValueChange: value => setValue(value),\n                children: [/*#__PURE__*/_jsxs(Tabs.List, {\n                  \"aria-label\": \"tabs\",\n                  children: [/*#__PURE__*/_jsx(Tabs.Tab, {\n                    value: \"0\",\n                    children: \"One\"\n                  }), /*#__PURE__*/_jsx(Tabs.Tab, {\n                    value: \"1\",\n                    children: \"Two\"\n                  }), /*#__PURE__*/_jsx(Tabs.Tab, {\n                    value: \"2\",\n                    children: \"Three\"\n                  })]\n                }), /*#__PURE__*/_jsx(Tabs.Panel, {\n                  value: \"0\",\n                  children: \"Tab one content\"\n                }), /*#__PURE__*/_jsx(Tabs.Panel, {\n                  value: \"1\",\n                  children: \"Tab two content\"\n                }), /*#__PURE__*/_jsx(Tabs.Panel, {\n                  value: \"2\",\n                  children: \"Tab three content\"\n                })]\n              })]\n            });\n          }\n        })\n      })]\n    });\n  }\n}\n\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n/* ========= */\n\n\nexport const overview = () => /*#__PURE__*/_jsxs(Tabs.Root, {\n  defaultValue: 0,\n  children: [/*#__PURE__*/_jsxs(Tabs.List, {\n    \"aria-label\": \"tabs\",\n    children: [/*#__PURE__*/_jsx(Tabs.Tab, {\n      value: 0,\n      children: \"One\"\n    }), /*#__PURE__*/_jsx(Tabs.Tab, {\n      value: 1,\n      children: \"Two\"\n    }), /*#__PURE__*/_jsx(Tabs.Tab, {\n      value: 2,\n      children: \"Three\"\n    })]\n  }), /*#__PURE__*/_jsx(Tabs.Panel, {\n    value: 0,\n    children: \"Tab one content\"\n  }), /*#__PURE__*/_jsx(Tabs.Panel, {\n    value: 1,\n    children: \"Tab two content\"\n  }), /*#__PURE__*/_jsx(Tabs.Panel, {\n    value: 2,\n    children: \"Tab three content\"\n  })]\n});\noverview.storyName = 'Overview';\noverview.parameters = {\n  storySource: {\n    source: '() => <Tabs.Root defaultValue={0}>\\n        <Tabs.List aria-label=\\\"tabs\\\">\\n          <Tabs.Tab value={0}>One</Tabs.Tab>\\n          <Tabs.Tab value={1}>Two</Tabs.Tab>\\n          <Tabs.Tab value={2}>Three</Tabs.Tab>\\n        </Tabs.List>\\n        <Tabs.Panel value={0}>Tab one content</Tabs.Panel>\\n        <Tabs.Panel value={1}>Tab two content</Tabs.Panel>\\n        <Tabs.Panel value={2}>Tab three content</Tabs.Panel>\\n      </Tabs.Root>'\n  }\n};\nexport const controlled = () => {\n  const [value, setValue] = useState(\"0\");\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"label\", {\n      htmlFor: \"tab\",\n      children: \"Drag slider to change tab:\"\n    }), /*#__PURE__*/_jsx(\"input\", {\n      type: \"range\",\n      name: \"tab\",\n      min: \"0\",\n      max: \"2\",\n      value: value,\n      onChange: event => setValue(event.currentTarget.value)\n    }), /*#__PURE__*/_jsxs(Tabs.Root, {\n      value: value,\n      onValueChange: value => setValue(value),\n      children: [/*#__PURE__*/_jsxs(Tabs.List, {\n        \"aria-label\": \"tabs\",\n        children: [/*#__PURE__*/_jsx(Tabs.Tab, {\n          value: \"0\",\n          children: \"One\"\n        }), /*#__PURE__*/_jsx(Tabs.Tab, {\n          value: \"1\",\n          children: \"Two\"\n        }), /*#__PURE__*/_jsx(Tabs.Tab, {\n          value: \"2\",\n          children: \"Three\"\n        })]\n      }), /*#__PURE__*/_jsx(Tabs.Panel, {\n        value: \"0\",\n        children: \"Tab one content\"\n      }), /*#__PURE__*/_jsx(Tabs.Panel, {\n        value: \"1\",\n        children: \"Tab two content\"\n      }), /*#__PURE__*/_jsx(Tabs.Panel, {\n        value: \"2\",\n        children: \"Tab three content\"\n      })]\n    })]\n  });\n};\ncontrolled.storyName = 'Controlled';\ncontrolled.parameters = {\n  storySource: {\n    source: '() => {\\n  const [value, setValue] = useState(\\\"0\\\");\\n  return <>\\n          <label htmlFor=\\\"tab\\\">Drag slider to change tab:</label>\\n          <input type=\\\"range\\\" name=\\\"tab\\\" min=\\\"0\\\" max=\\\"2\\\" value={value} onChange={event => setValue(event.currentTarget.value)} />\\n          <Tabs.Root value={value} onValueChange={value => setValue(value)}>\\n            <Tabs.List aria-label=\\\"tabs\\\">\\n              <Tabs.Tab value=\\\"0\\\">One</Tabs.Tab>\\n              <Tabs.Tab value=\\\"1\\\">Two</Tabs.Tab>\\n              <Tabs.Tab value=\\\"2\\\">Three</Tabs.Tab>\\n            </Tabs.List>\\n            <Tabs.Panel value=\\\"0\\\">Tab one content</Tabs.Panel>\\n            <Tabs.Panel value=\\\"1\\\">Tab two content</Tabs.Panel>\\n            <Tabs.Panel value=\\\"2\\\">Tab three content</Tabs.Panel>\\n          </Tabs.Root>\\n        </>;\\n}'\n  }\n};\nconst componentMeta = {\n  title: 'Atoms/Tabs',\n  component: Tabs.Root,\n  tags: ['stories-mdx'],\n  includeStories: [\"overview\", \"controlled\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = { ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;"],"names":[],"sourceRoot":""}