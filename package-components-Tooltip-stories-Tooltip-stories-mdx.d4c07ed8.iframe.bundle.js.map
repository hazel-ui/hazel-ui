{"version":3,"file":"package-components-Tooltip-stories-Tooltip-stories-mdx.d4c07ed8.iframe.bundle.js","mappings":";AAIA;;;;;;;;;;;AC2BA;;;;;;AAMA;;AAEA;AACA;;AAEA;;;;AAIA;AACA;;AAEA;AACA;;;;;;;;;;;;AAYA;AACA;;;AAGA;AACA;ACjEA;;;;;AASA;;AAGA;AAZA;;;;;;AAoBA;;;AAGA;;AAGA;AA1BA;;;;;AAiCA;;AAGA;;AApCA;;;;;;;AA8CA;;;AAGA;;AAGA","sources":["webpack://hazel-ui/./src/package/foundation/Box/Box.tsx","webpack://hazel-ui/./src/package/components/Tooltip/Tooltip.tsx","webpack://hazel-ui/./src/package/components/Tooltip/styles.ts"],"sourcesContent":["import { styled } from \"styled-components\";\nimport { compose, flexbox, layout, space, typography, } from \"styled-system\";\nconst styledSystemStyles = compose(flexbox, layout, space, typography);\nexport const Box = styled.div `\n  ${styledSystemStyles}\n`;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { styled } from \"styled-components\";\nimport { Shadow } from \"../../foundation/Shadow/Shadow.js\";\nimport { Theme } from \"../../foundation/Theme/Theme.js\";\nimport { applyTooltipDirection } from \"./styles.js\";\nexport function Tooltip(_a) {\n    var { arrowSize = \"0.4rem\", children, content = \"\", direction = \"right\", open = false, tooltipBackground = \"#2F3545\", tooltipColor = \"#FFFFFF\" } = _a, rest = __rest(_a, [\"arrowSize\", \"children\", \"content\", \"direction\", \"open\", \"tooltipBackground\", \"tooltipColor\"]);\n    return (_jsxs(Container, { children: [children, _jsx(TooltipContent, Object.assign({ arrowSize: arrowSize, direction: direction, tooltipBackground: tooltipBackground, tooltipColor: tooltipColor, open: open }, rest, { children: content }))] }));\n}\nconst Container = styled.div `\n  position: relative;\n  display: inline-block;\n\n  cursor: default;\n\n  &:hover > span {\n    visibility: visible;\n    opacity: 1;\n  }\n`;\nconst TooltipContent = styled.span `\n  position: absolute;\n  border-radius: 0.3rem;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 0.5rem 0.3rem;\n  box-shadow: ${Shadow.s};\n\n  background-color: ${(props) => props.tooltipBackground};\n  color: ${(props) => props.tooltipColor};\n\n  font-family: ${Theme.font.sansSerif};\n  font-size: 14px;\n  line-height: 1;\n  z-index: 1;\n  ${(props) => !props.width && `white-space: nowrap;`};\n  ${(props) => props.width && `text-align: center;`};\n\n  visibility: ${(props) => (props.open ? \"visible\" : \"hidden\")};\n  opacity: ${(props) => (props.open ? 1 : 0)};\n  transition: opacity 0.5s;\n\n  /* border triangles */\n  &::before {\n    position: absolute;\n    content: \" \";\n    left: 50%;\n    border: solid transparent;\n    height: 0;\n    width: 0;\n    pointer-events: none;\n    border-width: ${(props) => props.arrowSize};\n    margin-left: ${(props) => `calc(${props.arrowSize} * -1)`};\n  }\n\n  ${(props) => props.width && `width: ${props.width};`};\n  ${(props) => applyTooltipDirection(props.arrowSize, props.direction, props.tooltipBackground)}\n`;\n","import { css } from \"styled-components\";\nexport function applyTooltipDirection(arrowSize, direction, tooltipBackground) {\n    const tooltipMargin = \"2.6rem\";\n    switch (direction) {\n        case \"top\":\n            return css `\n        top: calc(${tooltipMargin} * -1);\n\n        /* bottom arrow */\n        &::before {\n          top: 100%;\n          border-top-color: ${tooltipBackground};\n        }\n      `;\n        case \"right\":\n            return css `\n        left: calc(100% + ${tooltipMargin} / 2);\n        top: 50%;\n        transform: translateX(0) translateY(-50%);\n\n        /* left arrow */\n        &::before {\n          left: calc(${arrowSize} * -1);\n          top: 50%;\n          transform: translateX(0) translateY(-50%);\n          border-right-color: ${tooltipBackground};\n        }\n      `;\n        case \"bottom\":\n            return css `\n        bottom: calc(${tooltipMargin} * -1.3);\n\n        /* top arrow */\n        &::before {\n          bottom: 100%;\n          border-bottom-color: ${tooltipBackground};\n        }\n      `;\n        case \"left\":\n            return css `\n        left: auto;\n        right: calc(100% + ${tooltipMargin} / 2);\n        top: 50%;\n        transform: translateX(0) translateY(-50%);\n\n        /* right arrow */\n        &::before {\n          left: auto;\n          right: calc(${arrowSize} * -2);\n          top: 50%;\n          transform: translateX(0) translateY(-50%);\n          border-left-color: ${tooltipBackground};\n        }\n      `;\n        default:\n            return null;\n    }\n}\n"],"names":[],"sourceRoot":""}